// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieDataBase.Data;

#nullable disable

namespace MovieDataBase.Migrations
{
    [DbContext(typeof(MovieDataBaseContext))]
    [Migration("20251029182804_SeedPeopleRolesAndMovies")]
    partial class SeedPeopleRolesAndMovies
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MovieDataBase.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Fast-paced, high energy films.",
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Emotion-driven storytelling.",
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Humorous and light-hearted films.",
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Futuristic and science-based stories.",
                            Name = "Sci-Fi"
                        });
                });

            modelBuilder.Entity("MovieDataBase.Models.MovieGenres", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("MovieGenres");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            GenreId = 1
                        },
                        new
                        {
                            MovieId = 1,
                            GenreId = 2
                        },
                        new
                        {
                            MovieId = 2,
                            GenreId = 2
                        },
                        new
                        {
                            MovieId = 3,
                            GenreId = 3
                        },
                        new
                        {
                            MovieId = 4,
                            GenreId = 4
                        },
                        new
                        {
                            MovieId = 4,
                            GenreId = 1
                        },
                        new
                        {
                            MovieId = 5,
                            GenreId = 2
                        },
                        new
                        {
                            MovieId = 5,
                            GenreId = 3
                        },
                        new
                        {
                            MovieId = 6,
                            GenreId = 1
                        },
                        new
                        {
                            MovieId = 6,
                            GenreId = 4
                        },
                        new
                        {
                            MovieId = 7,
                            GenreId = 4
                        },
                        new
                        {
                            MovieId = 7,
                            GenreId = 2
                        },
                        new
                        {
                            MovieId = 8,
                            GenreId = 2
                        });
                });

            modelBuilder.Entity("MovieDataBase.Models.MovieImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MovieId")
                        .HasColumnType("int");

                    b.Property<string>("imageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieImages");
                });

            modelBuilder.Entity("MovieDataBase.Models.Movies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentRating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CritiqueScore")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DateReleased")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Director")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Runtime")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContentRating = "PG-13",
                            CritiqueScore = 94,
                            DateReleased = new DateOnly(2008, 7, 18),
                            Description = "Batman faces the Joker, a criminal mastermind who wants to plunge Gotham City into anarchy.",
                            Director = "Christopher Nolan",
                            Runtime = 152,
                            Title = "The Dark Knight"
                        },
                        new
                        {
                            Id = 2,
                            ContentRating = "R",
                            CritiqueScore = 91,
                            DateReleased = new DateOnly(1994, 9, 23),
                            Description = "Two imprisoned men bond over years, finding solace and eventual redemption through acts of common decency.",
                            Director = "Frank Darabont",
                            Runtime = 142,
                            Title = "The Shawshank Redemption"
                        },
                        new
                        {
                            Id = 3,
                            ContentRating = "R",
                            CritiqueScore = 88,
                            DateReleased = new DateOnly(2007, 8, 17),
                            Description = "Two co-dependent high school seniors are forced to deal with separation anxiety after their plan to stage a booze-soaked party goes awry.",
                            Director = "Greg Mottola",
                            Runtime = 113,
                            Title = "Superbad"
                        },
                        new
                        {
                            Id = 4,
                            ContentRating = "PG-13",
                            CritiqueScore = 87,
                            DateReleased = new DateOnly(2010, 7, 16),
                            Description = "A thief who steals corporate secrets through the use of dream-sharing technology is given the inverse task of planting an idea.",
                            Director = "Christopher Nolan",
                            Runtime = 148,
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 5,
                            ContentRating = "PG-13",
                            CritiqueScore = 71,
                            DateReleased = new DateOnly(1994, 7, 6),
                            Description = "The presidencies of Kennedy and Johnson, the Vietnam War, and other historical events unfold from the perspective of an Alabama man.",
                            Director = "Robert Zemeckis",
                            Runtime = 142,
                            Title = "Forrest Gump"
                        },
                        new
                        {
                            Id = 6,
                            ContentRating = "R",
                            CritiqueScore = 97,
                            DateReleased = new DateOnly(2015, 5, 15),
                            Description = "In a post-apocalyptic wasteland, a woman rebels against a tyrannical ruler in search for her homeland with the aid of a group of female prisoners.",
                            Director = "George Miller",
                            Runtime = 120,
                            Title = "Mad Max: Fury Road"
                        },
                        new
                        {
                            Id = 7,
                            ContentRating = "PG-13",
                            CritiqueScore = 72,
                            DateReleased = new DateOnly(2014, 11, 7),
                            Description = "A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival.",
                            Director = "Christopher Nolan",
                            Runtime = 169,
                            Title = "Interstellar"
                        },
                        new
                        {
                            Id = 8,
                            ContentRating = "R",
                            CritiqueScore = 96,
                            DateReleased = new DateOnly(2019, 5, 30),
                            Description = "Greed and class discrimination threaten the newly formed symbiotic relationship between the wealthy Park family and the destitute Kim clan.",
                            Director = "Bong Joon-ho",
                            Runtime = 132,
                            Title = "Parasite"
                        });
                });

            modelBuilder.Entity("MovieDataBase.Models.People", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfDeath")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Biography = "British-American filmmaker known for his cerebral, often nonlinear storytelling. Notable works include The Dark Knight trilogy, Inception, and Interstellar.",
                            DateOfBirth = new DateTime(1970, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Christopher Nolan"
                        },
                        new
                        {
                            Id = 2,
                            Biography = "American film director and screenwriter best known for his adaptations of Stephen King novels, including The Shawshank Redemption and The Green Mile.",
                            DateOfBirth = new DateTime(1959, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Frank Darabont"
                        },
                        new
                        {
                            Id = 3,
                            Biography = "American filmmaker known for comedy films such as Superbad and Adventureland.",
                            DateOfBirth = new DateTime(1964, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Greg Mottola"
                        },
                        new
                        {
                            Id = 4,
                            Biography = "American filmmaker known for Forrest Gump, Back to the Future trilogy, and pioneering motion-capture animation.",
                            DateOfBirth = new DateTime(1951, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Robert Zemeckis"
                        },
                        new
                        {
                            Id = 5,
                            Biography = "Australian filmmaker best known for creating the Mad Max franchise and directing Happy Feet.",
                            DateOfBirth = new DateTime(1945, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "George Miller"
                        },
                        new
                        {
                            Id = 6,
                            Biography = "South Korean filmmaker known for Parasite (winner of 4 Oscars including Best Picture), Snowpiercer, and Memories of Murder.",
                            DateOfBirth = new DateTime(1969, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bong Joon-ho"
                        },
                        new
                        {
                            Id = 7,
                            Biography = "British actor known for his versatility and intense method acting. Famous for Batman trilogy, American Psycho, and The Machinist.",
                            DateOfBirth = new DateTime(1974, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Christian Bale"
                        },
                        new
                        {
                            Id = 8,
                            Biography = "Australian actor who won a posthumous Oscar for his iconic portrayal of the Joker in The Dark Knight.",
                            DateOfBirth = new DateTime(1979, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfDeath = new DateTime(2008, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Heath Ledger"
                        },
                        new
                        {
                            Id = 9,
                            Biography = "Legendary American actor and narrator with a distinctive voice. Academy Award winner known for roles in Shawshank Redemption and Million Dollar Baby.",
                            DateOfBirth = new DateTime(1937, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Morgan Freeman"
                        },
                        new
                        {
                            Id = 10,
                            Biography = "American actor, screenwriter, and director known for The Shawshank Redemption and Mystic River.",
                            DateOfBirth = new DateTime(1958, 10, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tim Robbins"
                        },
                        new
                        {
                            Id = 11,
                            Biography = "American actor, comedian, and filmmaker. Two-time Oscar nominee known for Superbad, Moneyball, and The Wolf of Wall Street.",
                            DateOfBirth = new DateTime(1983, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jonah Hill"
                        },
                        new
                        {
                            Id = 12,
                            Biography = "Canadian actor known for his awkward, comedic roles in Superbad, Juno, and Scott Pilgrim vs. the World.",
                            DateOfBirth = new DateTime(1988, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Michael Cera"
                        },
                        new
                        {
                            Id = 13,
                            Biography = "Oscar-winning American actor and environmental activist. Known for Titanic, Inception, The Revenant, and collaborations with Scorsese.",
                            DateOfBirth = new DateTime(1974, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Leonardo DiCaprio"
                        },
                        new
                        {
                            Id = 14,
                            Biography = "British actor known for intense physical transformations. Famous for Mad Max: Fury Road, The Dark Knight Rises, and Venom.",
                            DateOfBirth = new DateTime(1977, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tom Hardy"
                        },
                        new
                        {
                            Id = 15,
                            Biography = "Canadian actor known for Juno, Inception, and The Umbrella Academy. Now known as Elliot Page.",
                            DateOfBirth = new DateTime(1987, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ellen Page"
                        },
                        new
                        {
                            Id = 16,
                            Biography = "Two-time Oscar winner and one of Hollywood's most beloved actors. Known for Forrest Gump, Saving Private Ryan, and Cast Away.",
                            DateOfBirth = new DateTime(1956, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tom Hanks"
                        },
                        new
                        {
                            Id = 17,
                            Biography = "South African-American actress and producer. Oscar winner known for Monster, Mad Max: Fury Road, and Atomic Blonde.",
                            DateOfBirth = new DateTime(1975, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Charlize Theron"
                        },
                        new
                        {
                            Id = 18,
                            Biography = "Oscar-winning American actor known for Dallas Buyers Club, Interstellar, and True Detective.",
                            DateOfBirth = new DateTime(1969, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Matthew McConaughey"
                        },
                        new
                        {
                            Id = 19,
                            Biography = "Oscar-winning American actress known for The Devil Wears Prada, Les Misérables, and Interstellar.",
                            DateOfBirth = new DateTime(1982, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Anne Hathaway"
                        },
                        new
                        {
                            Id = 20,
                            Biography = "South Korean actor and Bong Joon-ho's frequent collaborator. Known for Parasite, Memories of Murder, and The Host.",
                            DateOfBirth = new DateTime(1967, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Song Kang-ho"
                        });
                });

            modelBuilder.Entity("MovieDataBase.Models.PeopleRolesInMovies", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("PeopleId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("CharacterName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MovieId", "PeopleId", "RoleId");

                    b.HasIndex("PeopleId");

                    b.HasIndex("RoleId");

                    b.ToTable("PeopleRolesInMovies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            PeopleId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            MovieId = 1,
                            PeopleId = 7,
                            RoleId = 2,
                            CharacterName = "Bruce Wayne / Batman"
                        },
                        new
                        {
                            MovieId = 1,
                            PeopleId = 8,
                            RoleId = 2,
                            CharacterName = "The Joker"
                        },
                        new
                        {
                            MovieId = 1,
                            PeopleId = 9,
                            RoleId = 2,
                            CharacterName = "Lucius Fox"
                        },
                        new
                        {
                            MovieId = 2,
                            PeopleId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            MovieId = 2,
                            PeopleId = 10,
                            RoleId = 2,
                            CharacterName = "Andy Dufresne"
                        },
                        new
                        {
                            MovieId = 2,
                            PeopleId = 9,
                            RoleId = 2,
                            CharacterName = "Ellis Boyd 'Red' Redding"
                        },
                        new
                        {
                            MovieId = 3,
                            PeopleId = 3,
                            RoleId = 1
                        },
                        new
                        {
                            MovieId = 3,
                            PeopleId = 11,
                            RoleId = 2,
                            CharacterName = "Seth"
                        },
                        new
                        {
                            MovieId = 3,
                            PeopleId = 12,
                            RoleId = 2,
                            CharacterName = "Evan"
                        },
                        new
                        {
                            MovieId = 4,
                            PeopleId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            MovieId = 4,
                            PeopleId = 13,
                            RoleId = 2,
                            CharacterName = "Dom Cobb"
                        },
                        new
                        {
                            MovieId = 4,
                            PeopleId = 14,
                            RoleId = 2,
                            CharacterName = "Eames"
                        },
                        new
                        {
                            MovieId = 4,
                            PeopleId = 15,
                            RoleId = 2,
                            CharacterName = "Ariadne"
                        },
                        new
                        {
                            MovieId = 5,
                            PeopleId = 4,
                            RoleId = 1
                        },
                        new
                        {
                            MovieId = 5,
                            PeopleId = 16,
                            RoleId = 2,
                            CharacterName = "Forrest Gump"
                        },
                        new
                        {
                            MovieId = 6,
                            PeopleId = 5,
                            RoleId = 1
                        },
                        new
                        {
                            MovieId = 6,
                            PeopleId = 14,
                            RoleId = 2,
                            CharacterName = "Max Rockatansky"
                        },
                        new
                        {
                            MovieId = 6,
                            PeopleId = 17,
                            RoleId = 2,
                            CharacterName = "Imperator Furiosa"
                        },
                        new
                        {
                            MovieId = 7,
                            PeopleId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            MovieId = 7,
                            PeopleId = 18,
                            RoleId = 2,
                            CharacterName = "Cooper"
                        },
                        new
                        {
                            MovieId = 7,
                            PeopleId = 19,
                            RoleId = 2,
                            CharacterName = "Brand"
                        },
                        new
                        {
                            MovieId = 8,
                            PeopleId = 6,
                            RoleId = 1
                        },
                        new
                        {
                            MovieId = 8,
                            PeopleId = 20,
                            RoleId = 2,
                            CharacterName = "Kim Ki-taek"
                        });
                });

            modelBuilder.Entity("MovieDataBase.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Director"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Actor"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Writer"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Producer"
                        });
                });

            modelBuilder.Entity("MovieDataBase.Models.MovieGenres", b =>
                {
                    b.HasOne("MovieDataBase.Models.Genre", "Genre")
                        .WithMany("MovieGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieDataBase.Models.Movies", "Movie")
                        .WithMany("MovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MovieDataBase.Models.MovieImages", b =>
                {
                    b.HasOne("MovieDataBase.Models.Movies", "Movie")
                        .WithMany("Images")
                        .HasForeignKey("MovieId");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MovieDataBase.Models.PeopleRolesInMovies", b =>
                {
                    b.HasOne("MovieDataBase.Models.Movies", "Movie")
                        .WithMany("PeopleRoles")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieDataBase.Models.People", "People")
                        .WithMany("MovieRoles")
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieDataBase.Models.Role", "Role")
                        .WithMany("PeopleInMovies")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("People");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MovieDataBase.Models.Genre", b =>
                {
                    b.Navigation("MovieGenres");
                });

            modelBuilder.Entity("MovieDataBase.Models.Movies", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("MovieGenres");

                    b.Navigation("PeopleRoles");
                });

            modelBuilder.Entity("MovieDataBase.Models.People", b =>
                {
                    b.Navigation("MovieRoles");
                });

            modelBuilder.Entity("MovieDataBase.Models.Role", b =>
                {
                    b.Navigation("PeopleInMovies");
                });
#pragma warning restore 612, 618
        }
    }
}
